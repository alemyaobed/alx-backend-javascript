(()=>{var e=new Subjects.Cpp,a=new Subjects.React,c=new Subjects.Java,o={firstName:"John",lastName:"Doe",experienceTeachingC:10,experienceTeachingReact:5,experienceTeachingJava:8};e.setTeacher(o),console.log(e.getRequirements()),console.log(e.getAvailableTeacher()),a.setTeacher(o),console.log(a.getRequirements()),console.log(a.getAvailableTeacher()),c.setTeacher(o),console.log(c.getRequirements()),console.log(c.getAvailableTeacher())})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVuZGxlLmpzIiwibWFwcGluZ3MiOiJNQXFFQSxJQUFNQSxFQUFNLElBQUlDLFNBQVNDLElBQ25CQyxFQUFRLElBQUlGLFNBQVNHLE1BQ3JCQyxFQUFPLElBQUlKLFNBQVNLLEtBRXBCQyxFQUE0QixDQUNoQ0MsVUFBVyxPQUNYQyxTQUFVLE1BQ1ZDLG9CQUFxQixHQUNyQkMsd0JBQXlCLEVBQ3pCQyx1QkFBd0IsR0FHMUJaLEVBQUlhLFdBQVdOLEdBQ2ZPLFFBQVFDLElBQUlmLEVBQUlnQixtQkFDaEJGLFFBQVFDLElBQUlmLEVBQUlpQix1QkFFaEJkLEVBQU1VLFdBQVdOLEdBQ2pCTyxRQUFRQyxJQUFJWixFQUFNYSxtQkFDbEJGLFFBQVFDLElBQUlaLEVBQU1jLHVCQUVsQlosRUFBS1EsV0FBV04sR0FDaEJPLFFBQVFDLElBQUlWLEVBQUtXLG1CQUNqQkYsUUFBUUMsSUFBSVYsRUFBS1ksc0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YXNrXzQvLi9qcy9tYWluLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENyZWF0ZSBhIG5ldyBkaXJlY3RvcnkgdGFza180IGFuZCBjb3B5IHRoZSBhYm92ZSB0c2NvbmZpZy5qc29uIGFuZCBwdXQgdGhpcyBwYWNrYWdlLmpzb24gaW4gdGhlcmVcblxuLy8ge1xuLy8gICBcIm5hbWVcIjogXCJ0YXNrXzRcIixcbi8vICAgXCJ2ZXJzaW9uXCI6IFwiMS4wLjBcIixcbi8vICAgXCJkZXNjcmlwdGlvblwiOiBcIlwiLFxuLy8gICBcIm1haW5cIjogXCJpbmRleC5qc1wiLFxuLy8gICBcInNjcmlwdHNcIjoge1xuLy8gICAgIFwiYnVpbGRcIjogXCJ3ZWJwYWNrXCIsXG4vLyAgICAgXCJ0ZXN0XCI6IFwiZWNobyBcXFwiRXJyb3I6IG5vIHRlc3Qgc3BlY2lmaWVkXFxcIiAmJiBleGl0IDFcIlxuLy8gICB9LFxuLy8gICBcImtleXdvcmRzXCI6IFtdLFxuLy8gICBcImF1dGhvclwiOiBcIlwiLFxuLy8gICBcImxpY2Vuc2VcIjogXCJJU0NcIixcbi8vICAgXCJkZXZEZXBlbmRlbmNpZXNcIjoge1xuLy8gICAgIFwiQHR5cGVzY3JpcHQtZXNsaW50L2VzbGludC1wbHVnaW5cIjogXCJeMi40LjBcIixcbi8vICAgICBcIkB0eXBlc2NyaXB0LWVzbGludC9wYXJzZXJcIjogXCJeMi40LjBcIixcbi8vICAgICBcImNsZWFuLXdlYnBhY2stcGx1Z2luXCI6IFwiXjMuMC4wXCIsXG4vLyAgICAgXCJmb3JrLXRzLWNoZWNrZXItd2VicGFjay1wbHVnaW5cIjogXCJeMS41LjFcIixcbi8vICAgICBcImh0bWwtd2VicGFjay1wbHVnaW5cIjogXCJeMy4yLjBcIixcbi8vICAgICBcInRzLWxvYWRlclwiOiBcIl42LjIuMFwiLFxuLy8gICAgIFwidHlwZXNjcmlwdFwiOiBcIl4zLjYuNFwiLFxuLy8gICAgIFwid2VicGFja1wiOiBcIl40LjQxLjJcIixcbi8vICAgICBcIndlYnBhY2stY2xpXCI6IFwiXjMuMy45XCIsXG4vLyAgICAgXCJ3ZWJwYWNrLWRldi1zZXJ2ZXJcIjogXCJeMy44LjJcIlxuLy8gICB9XG4vLyB9XG4vLyBJbiB0YXNrXzQvanMvc3ViamVjdHM6XG5cbi8vIENyZWF0ZSBhIGZpbGUgVGVhY2hlci50cyBhbmQgd3JpdGUgYSBUZWFjaGVyIGludGVyZmFjZSBpbiBhIG5hbWVzcGFjZSBuYW1lZCBTdWJqZWN0cy5cblxuLy8gdGhlIGludGVyZmFjZSByZXF1aXJlcyBmaXJzdE5hbWUgYW5kIGxhc3ROYW1lIGFzIHN0cmluZ1xuLy8gQ3JlYXRlIGEgZmlsZSBTdWJqZWN0LnRzIGFuZCB3cml0ZSBhIFN1YmplY3QgY2xhc3MgaW4gdGhlIHNhbWUgbmFtZXNwYWNlIG5hbWVkIFN1YmplY3RzLlxuXG4vLyB0aGUgY2xhc3MgaGFzIG9uZSBhdHRyaWJ1dGUgdGVhY2hlciB0aGF0IGltcGxlbWVudHMgdGhlIFRlYWNoZXIgaW50ZXJmYWNlXG4vLyB0aGUgY2xhc3MgaGFzIG9uZSBzZXR0ZXIgbWV0aG9kIHNldFRlYWNoZXIgdGhhdCBhY2NlcHRzIGEgdGVhY2hlciBpbiBhcmd1bWVudCAoYW5kIGFzIHNldHRlciwgc2V0IHRoZSBpbnN0YW5jZSBhdHRyaWJ1dGUgdGVhY2hlciB3aXRoIGl0KVxuLy8gQ3JlYXRlIGEgZmlsZSBDcHAudHMgYW5kIG1ha2UgdGhlIGZvbGxvd2luZyBtb2RpZmljYXRpb25zIGluIHRoZSBzYW1lIG5hbWVzcGFjZS5cblxuLy8gVXNpbmcgZGVjbGFyYXRpb24gbWVyZ2luZywgYWRkIGEgbmV3IG9wdGlvbmFsIGF0dHJpYnV0ZSBleHBlcmllbmNlVGVhY2hpbmdDIChudW1iZXIpIHRvIHRoZSBUZWFjaGVyIGludGVyZmFjZVxuLy8gQ3JlYXRlIGEgY2xhc3MgQ3BwIGV4dGVuZGluZyBmcm9tIFN1YmplY3Rcbi8vIFdyaXRlIGEgbWV0aG9kIG5hbWVkIGdldFJlcXVpcmVtZW50cyB0aGF0IHdpbGwgcmV0dXJuIGEgc3RyaW5nIEhlcmUgaXMgdGhlIGxpc3Qgb2YgcmVxdWlyZW1lbnRzIGZvciBDcHBcbi8vIFdyaXRlIGEgbWV0aG9kIG5hbWVkIGdldEF2YWlsYWJsZVRlYWNoZXIgdGhhdCB3aWxsIHJldHVybiBhIHN0cmluZyBBdmFpbGFibGUgVGVhY2hlcjogPGZpcnN0IG5hbWUgb2YgdGVhY2hlcj5cbi8vIElmIHRoZSB0ZWFjaGVyIGRvZXNu4oCZdCBoYXZlIGFueSBleHBlcmllbmNlIGluIHRlYWNoaW5nIEMsIHRoZW4gdGhlIG1ldGhvZCBzaG91bGQgcmV0dXJuIGEgc3RyaW5nIE5vIGF2YWlsYWJsZSB0ZWFjaGVyXG4vLyBDcmVhdGUgYSBmaWxlIFJlYWN0LnRzIGFuZCB3cml0ZSBhIFJlYWN0IENsYXNzIGluIHRoZSBzYW1lIG5hbWVzcGFjZS5cblxuLy8gQWRkIGEgbmV3IGF0dHJpYnV0ZSBleHBlcmllbmNlVGVhY2hpbmdSZWFjdD8gKG51bWJlcikgdG8gdGhlIFRlYWNoZXIgaW50ZXJmYWNlXG4vLyBJbiB0aGUgY2xhc3MsIHdyaXRlIGEgbWV0aG9kIG5hbWVkIGdldFJlcXVpcmVtZW50cyB0aGF0IHdpbGwgcmV0dXJuIGEgc3RyaW5nIEhlcmUgaXMgdGhlIGxpc3Qgb2YgcmVxdWlyZW1lbnRzIGZvciBSZWFjdFxuLy8gV3JpdGUgYSBtZXRob2QgbmFtZWQgZ2V0QXZhaWxhYmxlVGVhY2hlciB0aGF0IHdpbGwgcmV0dXJuIGEgc3RyaW5nIEF2YWlsYWJsZSBUZWFjaGVyOiA8Zmlyc3QgbmFtZSBvZiB0ZWFjaGVyPlxuLy8gSWYgdGhlIHRlYWNoZXIgZG9lc27igJl0IGhhdmUgYW55IGV4cGVyaWVuY2UgaW4gdGVhY2hpbmcgUmVhY3QsIHRoZW4gdGhlIG1ldGhvZCBzaG91bGQgcmV0dXJuIGEgc3RyaW5nIE5vIGF2YWlsYWJsZSB0ZWFjaGVyXG4vLyBDcmVhdGUgYSBmaWxlIEphdmEudHMgYW5kIHdyaXRlIGEgSmF2YSBDbGFzcyBpbiB0aGUgc2FtZSBuYW1lc3BhY2UuXG5cbi8vIEFkZCBhIG5ldyBhdHRyaWJ1dGUgZXhwZXJpZW5jZVRlYWNoaW5nSmF2YT8gKG51bWJlcikgdG8gdGhlIFRlYWNoZXIgaW50ZXJmYWNlXG4vLyBJbiB0aGUgY2xhc3MsIHdyaXRlIGEgbWV0aG9kIG5hbWVkIGdldFJlcXVpcmVtZW50cyB0aGF0IHdpbGwgcmV0dXJuIGEgc3RyaW5nIEhlcmUgaXMgdGhlIGxpc3Qgb2YgcmVxdWlyZW1lbnRzIGZvciBKYXZhXG4vLyBXcml0ZSBhIG1ldGhvZCBuYW1lZCBnZXRBdmFpbGFibGVUZWFjaGVyIHRoYXQgd2lsbCByZXR1cm4gYSBzdHJpbmcgQXZhaWxhYmxlIFRlYWNoZXI6IDxmaXJzdCBuYW1lIG9mIHRlYWNoZXI+XG4vLyBJZiB0aGUgdGVhY2hlciBkb2VzbuKAmXQgaGF2ZSBhbnkgZXhwZXJpZW5jZSBpbiB0ZWFjaGluZyBKYXZhLCB0aGVuIHRoZSBtZXRob2Qgc2hvdWxkIHJldHVybiBhIHN0cmluZyBObyBhdmFpbGFibGUgdGVhY2hlclxuLy8gUmVwbzpcblxuLy8gR2l0SHViIHJlcG9zaXRvcnk6IGFseC1iYWNrZW5kLWphdmFzY3JpcHRcbi8vIERpcmVjdG9yeTogMHgwNC1UeXBlU2NyaXB0XG4vLyBGaWxlOiB0YXNrXzQvcGFja2FnZS5qc29uLCB0YXNrXzQvdHNjb25maWcuanNvbiwgdGFza180L2pzL3N1YmplY3RzL0NwcC50cywgdGFza180L2pzL3N1YmplY3RzL0phdmEudHMsIHRhc2tfNC9qcy9zdWJqZWN0cy9SZWFjdC50cywgdGFza180L2pzL3N1YmplY3RzL1N1YmplY3QudHMsIHRhc2tfNC9qcy9zdWJqZWN0cy9UZWFjaGVyLnRzXG5cbi8vIHRhc2tfNC9qcy9tYWluLnRzXG5cbi8vLyA8cmVmZXJlbmNlIHBhdGg9XCIuL3N1YmplY3RzL0NwcC50c1wiIC8+XG4vLy8gPHJlZmVyZW5jZSBwYXRoPVwiLi9zdWJqZWN0cy9SZWFjdC50c1wiIC8+XG4vLy8gPHJlZmVyZW5jZSBwYXRoPVwiLi9zdWJqZWN0cy9KYXZhLnRzXCIgLz5cblxuLy8gaW1wb3J0IHsgU3ViamVjdHMgfSBmcm9tICcuL21zdWJqZWN0cy9TdWJqZWN0JztcblxuY29uc3QgY3BwID0gbmV3IFN1YmplY3RzLkNwcCgpO1xuY29uc3QgcmVhY3QgPSBuZXcgU3ViamVjdHMuUmVhY3QoKTtcbmNvbnN0IGphdmEgPSBuZXcgU3ViamVjdHMuSmF2YSgpO1xuXG5jb25zdCB0ZWFjaGVyOiBTdWJqZWN0cy5UZWFjaGVyID0ge1xuICBmaXJzdE5hbWU6ICdKb2huJyxcbiAgbGFzdE5hbWU6ICdEb2UnLFxuICBleHBlcmllbmNlVGVhY2hpbmdDOiAxMCxcbiAgZXhwZXJpZW5jZVRlYWNoaW5nUmVhY3Q6IDUsXG4gIGV4cGVyaWVuY2VUZWFjaGluZ0phdmE6IDhcbn07XG5cbmNwcC5zZXRUZWFjaGVyKHRlYWNoZXIpO1xuY29uc29sZS5sb2coY3BwLmdldFJlcXVpcmVtZW50cygpKTtcbmNvbnNvbGUubG9nKGNwcC5nZXRBdmFpbGFibGVUZWFjaGVyKCkpO1xuXG5yZWFjdC5zZXRUZWFjaGVyKHRlYWNoZXIpO1xuY29uc29sZS5sb2cocmVhY3QuZ2V0UmVxdWlyZW1lbnRzKCkpO1xuY29uc29sZS5sb2cocmVhY3QuZ2V0QXZhaWxhYmxlVGVhY2hlcigpKTtcblxuamF2YS5zZXRUZWFjaGVyKHRlYWNoZXIpO1xuY29uc29sZS5sb2coamF2YS5nZXRSZXF1aXJlbWVudHMoKSk7XG5jb25zb2xlLmxvZyhqYXZhLmdldEF2YWlsYWJsZVRlYWNoZXIoKSk7XG5cbiJdLCJuYW1lcyI6WyJjcHAiLCJTdWJqZWN0cyIsIkNwcCIsInJlYWN0IiwiUmVhY3QiLCJqYXZhIiwiSmF2YSIsInRlYWNoZXIiLCJmaXJzdE5hbWUiLCJsYXN0TmFtZSIsImV4cGVyaWVuY2VUZWFjaGluZ0MiLCJleHBlcmllbmNlVGVhY2hpbmdSZWFjdCIsImV4cGVyaWVuY2VUZWFjaGluZ0phdmEiLCJzZXRUZWFjaGVyIiwiY29uc29sZSIsImxvZyIsImdldFJlcXVpcmVtZW50cyIsImdldEF2YWlsYWJsZVRlYWNoZXIiXSwic291cmNlUm9vdCI6IiJ9